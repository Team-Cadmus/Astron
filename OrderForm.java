/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package saree.application.gui;

import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.date;
import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.date;
import java.util.List;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Locale;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JRViewer;
import net.sf.jasperreports.view.JasperViewer;



/**
 *
 * @author Hii
 */
public class OrderForm extends javax.swing.JFrame {
    //static Connection connect;
    //static ResultSet res ;
    //static PreparedStatement ps;
    //static Statement stm;
    

    /**
     * Creates new form OrderForm
     */
    public OrderForm() {
        //connect=MyConnection.dbConnection();
        initComponents();
        FillAgentCombo();
        FillPartyCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
     // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
     private void initComponents() {

          date = new com.toedter.calendar.JDateChooser();
          jLabel1 = new javax.swing.JLabel();
          jLabel2 = new javax.swing.JLabel();
          jLabel3 = new javax.swing.JLabel();
          jLabel4 = new javax.swing.JLabel();
          jLabel5 = new javax.swing.JLabel();
          jLabel6 = new javax.swing.JLabel();
          jLabel7 = new javax.swing.JLabel();
          name_combo2 = new javax.swing.JComboBox<>();
          agent_dropbox = new javax.swing.JComboBox<>();
          base = new javax.swing.JComboBox<>();
          formNo = new javax.swing.JTextField();
          totalSarees = new javax.swing.JTextField();
          sareesParcels = new javax.swing.JTextField();
          paymentDays = new javax.swing.JTextField();
          jLabel8 = new javax.swing.JLabel();
          jLabel9 = new javax.swing.JLabel();
          jLabel10 = new javax.swing.JLabel();
          totalParcels = new javax.swing.JTextField();
          rate = new javax.swing.JTextField();
          jScrollPane1 = new javax.swing.JScrollPane();
          displayTable = new javax.swing.JTable();
          insertBtn = new javax.swing.JButton();
          update = new javax.swing.JButton();
          delete = new javax.swing.JButton();
          reset = new javax.swing.JButton();
          jButton5 = new javax.swing.JButton();
          i_want_to = new javax.swing.JComboBox<>();
          jLabel11 = new javax.swing.JLabel();
          jButton1 = new javax.swing.JButton();

          setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

          date.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
               public void propertyChange(java.beans.PropertyChangeEvent evt) {
                    datePropertyChange(evt);
               }
          });

          jLabel1.setText("Date:");

          jLabel2.setText("Party:");

          jLabel3.setText("Agent:");

          jLabel4.setText("Order Form No:");

          jLabel5.setText("Quality:");

          jLabel6.setText("Payment Days:");

          jLabel7.setText("Sarees per Parcels:");

          name_combo2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
          name_combo2.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    name_combo2ActionPerformed(evt);
               }
          });

          agent_dropbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
          agent_dropbox.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    agent_dropboxActionPerformed(evt);
               }
          });

          base.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Balatan Butta Rich Pallu", "Raw Slub Butta Rich Pallu", "Balatan Butta Chit Pallu", "Raw Slub Butta Chit Pallu", "Balatan Embose Chit Pallu", "Raw Slub all Over Butta" }));
          base.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    baseActionPerformed(evt);
               }
          });

          formNo.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    formNoActionPerformed(evt);
               }
          });

          jLabel8.setText("Total Sarees:");

          jLabel9.setText("Rate:");

          jLabel10.setText("Total Parcels:");

          displayTable.setModel(new javax.swing.table.DefaultTableModel(
               new Object [][] {
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null},
                    {null, null, null, null, null, null}
               },
               new String [] {
                    "Date", "Quality", "Sr_No", "Design", "Sarees", "Parcel"
               }
          ));
          jScrollPane1.setViewportView(displayTable);

          insertBtn.setText("Insert");
          insertBtn.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    insertBtnActionPerformed(evt);
               }
          });

          update.setText("Update");
          update.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    updateActionPerformed(evt);
               }
          });

          delete.setText("Delete");
          delete.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    deleteActionPerformed(evt);
               }
          });

          reset.setText("Reset");
          reset.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    resetActionPerformed(evt);
               }
          });

          jButton5.setText("Create PDF");
          jButton5.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton5ActionPerformed(evt);
               }
          });

          i_want_to.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Insert table data", "Insert form data", "Insert all data together", "Search by Date", "Search by Quality and Date", "Delete order data", "Update order data", "Update all data " }));

          jLabel11.setText("I want to:");

          jButton1.setText("Search");
          jButton1.addActionListener(new java.awt.event.ActionListener() {
               public void actionPerformed(java.awt.event.ActionEvent evt) {
                    jButton1ActionPerformed(evt);
               }
          });

          javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
          getContentPane().setLayout(layout);
          layout.setHorizontalGroup(
               layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addComponent(jLabel2)
                         .addComponent(jLabel4))
                    .addGap(24, 24, 24)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                         .addComponent(formNo)
                         .addComponent(name_combo2, 0, 174, Short.MAX_VALUE))
                    .addGap(30, 30, 30)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addComponent(jLabel5)
                         .addComponent(jLabel3))
                    .addGap(24, 24, 24)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addGroup(layout.createSequentialGroup()
                              .addComponent(agent_dropbox, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addGap(0, 0, Short.MAX_VALUE))
                         .addComponent(base, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGap(53, 53, 53)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addComponent(jLabel7)
                         .addComponent(jLabel6))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addComponent(sareesParcels, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                         .addComponent(paymentDays))
                    .addContainerGap())
               .addGroup(layout.createSequentialGroup()
                    .addGap(28, 28, 28)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addGroup(layout.createSequentialGroup()
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                   .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                             .addComponent(jLabel10)
                                             .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(37, 37, 37)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                             .addComponent(rate, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                             .addComponent(totalParcels, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                   .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(38, 38, 38)
                                        .addComponent(totalSarees, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                   .addGroup(layout.createSequentialGroup()
                                        .addComponent(insertBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                   .addGroup(layout.createSequentialGroup()
                                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                              .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                         .addGroup(layout.createSequentialGroup()
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                              .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addGap(62, 62, 62))))
               .addGroup(layout.createSequentialGroup()
                    .addGap(21, 21, 21)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(34, 34, 34)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                         .addComponent(i_want_to, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                         .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(125, 125, 125))
          );
          layout.setVerticalGroup(
               layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
               .addGroup(layout.createSequentialGroup()
                    .addGap(38, 38, 38)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                         .addComponent(i_want_to, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                         .addComponent(jButton1))
                    .addGap(18, 18, 18)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                         .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                         .addComponent(date, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE))
                    .addGap(35, 35, 35)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                         .addComponent(jLabel2)
                         .addComponent(jLabel3)
                         .addComponent(jLabel7)
                         .addComponent(name_combo2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addComponent(agent_dropbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addComponent(sareesParcels, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(31, 31, 31)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                         .addComponent(jLabel4)
                         .addComponent(jLabel5)
                         .addComponent(jLabel6)
                         .addComponent(base, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addComponent(formNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                         .addComponent(paymentDays, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                         .addGroup(layout.createSequentialGroup()
                              .addGap(101, 101, 101)
                              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                   .addComponent(jLabel8)
                                   .addComponent(totalSarees, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                              .addGap(29, 29, 29)
                              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                   .addComponent(jLabel10)
                                   .addComponent(totalParcels, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                              .addGap(26, 26, 26)
                              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                   .addComponent(jLabel9)
                                   .addComponent(rate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                              .addGap(58, 58, 58)
                              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                   .addComponent(insertBtn)
                                   .addComponent(update))
                              .addGap(40, 40, 40)
                              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                   .addComponent(delete)
                                   .addComponent(reset))
                              .addGap(38, 38, 38)
                              .addComponent(jButton5)
                              .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                         .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                              .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                              .addContainerGap())))
          );

          pack();
     }// </editor-fold>//GEN-END:initComponents

    private void insertBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertBtnActionPerformed
      try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con;
            con = DriverManager.getConnection(
                    "jdbc:mysql://sql452.main-hosting.eu:3306/u159657273_astron","u159657273_user1","Vaishnavi$2801");
            SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH);
            java.util.Date d3=date.getDate();
            String newDate3=formatter.format(d3);
            String SelectedBase=base.getSelectedItem().toString();
            String party=name_combo2.getSelectedItem().toString();
            String agent=agent_dropbox.getSelectedItem().toString();
            if(i_want_to.getSelectedIndex()==0){
                String query1="insert into order_form(Date,PartyName,Agent_name,form_no,payment_days,rate,sareesParcels,Quality) values (?,?,?,?,?,?,?,?)";
                PreparedStatement pst1=con.prepareStatement(query1);
                pst1.setString(1,newDate3);
                pst1.setString(2,party);
                pst1.setString(3,agent);
                pst1.setString(4,formNo.getText());
                pst1.setString(5,paymentDays.getText());
                pst1.setString(6,rate.getText());
                pst1.setString(7,sareesParcels.getText());
                pst1.setString(8,SelectedBase);
                pst1.executeUpdate();
            }
            else if(i_want_to.getSelectedIndex()==1){
                int rows=displayTable.getRowCount();
                //System.out.println(rows);
                for(int row=0;row<rows;row++){

                    String date1=(String) displayTable.getValueAt(row,0);
                    String quality=(String) displayTable.getValueAt(row,1);
                    String srno=(String)displayTable.getValueAt(row,2);
                    String design=(String)displayTable.getValueAt(row,3);
                    String sarees=(String)displayTable.getValueAt(row,4);
                    String parcels=(String)displayTable.getValueAt(row,5);

                    if((date1=="" || date1==null)&&(quality=="" ||quality==null)){
                        String query2="insert into order_details(PartyName,Date,SrNumber,Design,Quality,sarees,parcels) values(?,?,?,?,?,?,?)";
                        PreparedStatement pst2=con.prepareStatement(query2);
                        pst2.setString(1,party);
                        pst2.setString(2,newDate3);
                        pst2.setString(3,srno);
                        pst2.setString(4,design);
                        pst2.setString(5,SelectedBase);
                        pst2.setString(6,sarees);
                        pst2.setString(7, parcels);
                        pst2.executeUpdate();
                    }
                }
            }
            else if(i_want_to.getSelectedIndex()==2){
                String query1="insert into order_form(Date,PartyName,Agent_name,form_no,payment_days,rate,sareesParcels,Quality) values (?,?,?,?,?,?,?,?)";
                PreparedStatement pst1=con.prepareStatement(query1);
                pst1.setString(1,newDate3);
                pst1.setString(2,party);
                pst1.setString(3,agent);
                pst1.setString(4,formNo.getText());
                pst1.setString(5,paymentDays.getText());
                pst1.setString(6,rate.getText());
                pst1.setString(7,sareesParcels.getText());
                pst1.setString(8,SelectedBase);
                pst1.executeUpdate();
                int rows=displayTable.getRowCount();
                //System.out.println(rows);
                for(int row=0;row<rows;row++){
                    String date1=(String) displayTable.getValueAt(row,0);
                    String quality=(String) displayTable.getValueAt(row,1);
                    String srno=(String)displayTable.getValueAt(row,2);
                    String design=(String)displayTable.getValueAt(row,3);
                    String sarees=(String)displayTable.getValueAt(row,4);
                    String parcels=(String)displayTable.getValueAt(row,5);
                    if((date1=="" || date1==null)&&(quality=="" ||quality==null)){
                        String query2="insert into order_details(PartyName,Date,SrNumber,Design,Quality,sarees,parcels) values(?,?,?,?,?,?,?)";
                        PreparedStatement pst2=con.prepareStatement(query2);
                        pst2.setString(1,party);
                        pst2.setString(2,newDate3);
                        pst2.setString(3,srno);
                        pst2.setString(4,design);
                        pst2.setString(5,SelectedBase);
                        pst2.setString(6,sarees);
                        pst2.setString(7, parcels);
                        pst2.executeUpdate();
                    }   
                }
            }
            //new InsertedSuccessfully().setVisible(true);
      }catch(Exception e){
                    System.out.println(e.getMessage());     
       }// TODO add your handling code here:
    }//GEN-LAST:event_insertBtnActionPerformed
  
    private void formNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_formNoActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
    try{
     Class.forName("com.mysql.cj.jdbc.Driver");
     Connection con;
     con = DriverManager.getConnection(
     "jdbc:mysql://sql452.main-hosting.eu:3306/u159657273_astron","u159657273_user1","Vaishnavi$2801");
     java.util.Date d3=date.getDate();
     String SelectedBase=name_combo2.getSelectedItem().toString();
     String quality=base.getSelectedItem().toString();
     SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH);
     String newDate3=formatter.format(d3);
     JasperDesign jd=JRXmlLoader.load("E:\\Naman\\Project\\Saree Application Gui\\src\\saree\\application\\gui\\report2.jrxml");
     String query="select SrNumber,Design,sarees,parcels from order_details where Date='"+newDate3+"' "
             + "and PartyName='"+name_combo2.getSelectedItem().toString()+"' and Quality='"+base.getSelectedItem().toString()+"'";
     
     String query2="select * from order_details od NATURAL JOIN order_form ofrm WHERE (od.PartyName='"+name_combo2.getSelectedItem().toString()+"') "
             + "and (od.Date='"+newDate3+"') and (od.Quality='"+base.getSelectedItem().toString()+"') and(ofrm.PartyName=od.PartyName) "
             + "and (ofrm.Date=od.Date) and (ofrm.Quality=od.Quality)";

     //pst2.executeQuery();
     JRDesignQuery newQuery=new JRDesignQuery();
     newQuery.setText(query2);
     jd.setQuery(newQuery);

     HashMap<String,Object> para = new HashMap<>();
     PreparedStatement pst=con.prepareStatement(query2);
     ResultSet rs=pst.executeQuery();
     

     int form_no=0,payment_days=0,sareesParcels=0,totalSarees=0,totalParcels=0,SrNumber=0,sarees=0,parcels=0;
     String agent_name="",rate="",Design="";

     System.out.println(totalSarees);
     System.out.println(totalParcels);
     while(rs.next()){
          form_no=rs.getInt("form_no");
          payment_days=rs.getInt("payment_days");
          sareesParcels=rs.getInt("sareesParcels");
          agent_name=rs.getString("Agent_name");
          rate=rs.getString("rate");
     }
     System.out.print(form_no);
     para.put("form_no",form_no);
     para.put("payment_days",payment_days);
     para.put("sareesParcels",sareesParcels);
     para.put("Agent_name",agent_name);
     para.put("rate",rate);
     para.put("PartyName",name_combo2.getSelectedItem().toString());
     para.put("Date",date.getDate());
     para.put("Quality",base.getSelectedItem().toString());
     para.put("totalSarees",totalSarees);
     para.put("totalParcels",totalParcels);
     
     List<PdfListTable> pdfTableList = new ArrayList<PdfListTable>();
     PreparedStatement pst2=con.prepareStatement(query);
     ResultSet rs2=pst2.executeQuery();
     while(rs2.next()){
          pdfTableList.add(new PdfListTable(rs2.getInt("SrNumber"),rs2.getString("Design"),rs2.getInt("sarees"),rs2.getInt("parcels")));
     }

     JRBeanCollectionDataSource listToData=new JRBeanCollectionDataSource(pdfTableList);
    para.put("ListToTablePdf",listToData);
    
     JasperReport js=JasperCompileManager.compileReport(jd);
     JasperPrint jPrint=JasperFillManager.fillReport(js,para,con);
     JasperViewer.viewReport(jPrint,false);

}
catch(Exception e){
System.out.println(e.getMessage());
}
         
    }//GEN-LAST:event_jButton5ActionPerformed
   
   
    private void reset(){
        date.setDate(null);
        name_combo2.setSelectedIndex(0);
        agent_dropbox.setSelectedIndex(0);
        sareesParcels.setText("");
        formNo.setText("");
        base.setSelectedIndex(0);
        paymentDays.setText("");
        rate.setText("");
    }
    
    private void insertRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertRowActionPerformed
        TableModel model=displayTable.getModel(); 
        DefaultTableModel dtm=(DefaultTableModel)model;
        dtm.addRow(new Object[] {"","","","",""});// TODO add your handling code here:
    }//GEN-LAST:event_insertRowActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://sql452.main-hosting.eu:3306/u159657273_astron","u159657273_user1","Vaishnavi$2801");
            DefaultTableModel model = (DefaultTableModel) displayTable.getModel();
            int row = displayTable.getSelectedRow();
            String date=(String)displayTable.getValueAt(row,0);
            String srno=(String)displayTable.getValueAt(row,2);
            String query="delete from order_details where SrNumber=? and Date=?";
            PreparedStatement pst=con.prepareStatement(query);
            pst.setString(1,srno);
            pst.setString(2,date);
            pst.executeUpdate();
            //new Deleted_record().setVisible(true);
            model.removeRow(row);
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        reset();        // TODO add your handling code here:
    }//GEN-LAST:event_resetActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        if(i_want_to.getSelectedIndex()==6){
            try{  
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con;
                con = DriverManager.getConnection(
                    "jdbc:mysql://sql452.main-hosting.eu:3306/u159657273_astron","u159657273_user1","Vaishnavi$2801");
                TableModel model=displayTable.getModel();
                  String query="Update order_details SET Design=?,sarees=?,parcels=? where PartyName=? and Date=? and SrNumber=? and Quality=?";

                  PreparedStatement pst=con.prepareStatement(query);
                  /*SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH);
                 java.util.Date d3=date.getDate();
                 String newDate3=formatter.format(d3);*/

                  int row=displayTable.getSelectedRow();
                  System.out.print(row);

                 pst.setString(1,model.getValueAt(row,3).toString().trim());
                 pst.setString(2,model.getValueAt(row,4).toString().trim());
                 pst.setString(3,model.getValueAt(row,5).toString().trim());
                 pst.setString(4,name_combo2.getSelectedItem().toString());
                 pst.setString(5,model.getValueAt(row,0).toString());
                 pst.setString(6,model.getValueAt(row,2).toString().trim());
                 pst.setString(7,model.getValueAt(row,1).toString().trim());
                 pst.executeUpdate();
                    //new Update_record().setVisible(true);
            }catch(Exception e){
                        System.out.println(e.getMessage());     
             }
        }else if(i_want_to.getSelectedIndex()==7){
            try{  
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con;
                con = DriverManager.getConnection(
                    "jdbc:mysql://sql452.main-hosting.eu:3306/u159657273_astron","u159657273_user1","Vaishnavi$2801");
                TableModel model=displayTable.getModel();
                  String query="Update order_details SET Design=?,sarees=?,parcels=? where PartyName=? and Date=? and Quality=?";
                  String query2="Update order_form SET form_no=?,payment_days=?,rate=?,sareesParcels=? where PartyName=? and Date=? and Quality=?";
                  System.out.println("hi");
                  PreparedStatement pst=con.prepareStatement(query);
                  PreparedStatement pst2=con.prepareStatement(query2);
                  /*SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH);
                 java.util.Date d3=date.getDate();
                 String newDate3=formatter.format(d3);*/

                  int row=displayTable.getSelectedRow();
                  System.out.print(row);
                 pst.setString(1,model.getValueAt(row,3).toString().trim());
                 pst.setString(2,model.getValueAt(row,4).toString().trim());
                 pst.setString(3,model.getValueAt(row,5).toString().trim());
                 pst.setString(4,name_combo2.getSelectedItem().toString());
                 pst.setString(5,model.getValueAt(row,0).toString());
                 pst.setString(6,model.getValueAt(row,1).toString().trim());
                 pst2.setString(1,formNo.getText().toString().trim());
                 pst2.setString(2,paymentDays.getText().toString().trim());
                 pst2.setString(3,rate.getText().toString().trim());
                 pst2.setString(4,sareesParcels.getText().toString().trim());
                 pst2.setString(5,name_combo2.getSelectedItem().toString());
                 pst2.setString(6,model.getValueAt(row,0).toString());
                 pst2.setString(7,model.getValueAt(row,1).toString().trim());
                 pst.executeUpdate();
                 pst2.executeUpdate();
                 System.out.println("bi");
                    //new Update_record().setVisible(true);
            }catch(Exception e){
                        System.out.println(e.getMessage());     
             }
            
        }// TODO add your handling code here:
    }//GEN-LAST:event_updateActionPerformed

    private void name_combo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name_combo2ActionPerformed
        show_user();        // TODO add your handling code here:
    }//GEN-LAST:event_name_combo2ActionPerformed

    private void agent_dropboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agent_dropboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_agent_dropboxActionPerformed

    private void baseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_baseActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_baseActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(i_want_to.getSelectedIndex()==3){
            show_date_user();
        }else if(i_want_to.getSelectedIndex()==4){
            show_date_quality_user();
        }      // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void datePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_datePropertyChange
                // TODO add your handling code here:
    }//GEN-LAST:event_datePropertyChange
    public ArrayList<orderDetails> date_quality_specific_order(){
        ArrayList<orderDetails> orderList3=new ArrayList<orderDetails>();
        DefaultTableModel model=(DefaultTableModel)displayTable.getModel();
        while(model.getRowCount()>0){
            for (int i=0;i<model.getRowCount(); i++){
                    model.removeRow(i);
            }
        }
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con= DriverManager.getConnection(
                "jdbc:mysql://sql452.main-hosting.eu:3306/u159657273_astron","u159657273_user1","Vaishnavi$2801");
            String SelectedBase=name_combo2.getSelectedItem().toString();
            String quality=base.getSelectedItem().toString();
            orderDetails od;
            SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH);
            java.util.Date d3=date.getDate();
            String newDate3=formatter.format(d3);
            String query="select * from order_details od NATURAL JOIN order_form of WHERE (od.PartyName=?) and (od.Date=?) and (od.Quality=?)";
            PreparedStatement pst=con.prepareStatement(query);
            pst.setString(1,SelectedBase);
            pst.setString(2,newDate3);
            pst.setString(3,quality);
            ResultSet rs=pst.executeQuery();
            while(rs.next()){
                od=new orderDetails(rs.getString("Date"),rs.getString("SrNumber"),rs.getString("Design"),rs.getString("Quality"),rs.getString("sarees"),rs.getString("parcels"),rs.getString("Agent_name"),rs.getString("form_no"),rs.getString("payment_days"),rs.getString("rate"),rs.getString("sareesParcels"));
                orderList3.add(od);
                }
            }
            catch (ClassNotFoundException | SQLException e) {
                    System.out.println(e.getMessage());
                }
            return orderList3;
     }
    public void show_date_quality_user(){
        ArrayList<orderDetails> list3=date_quality_specific_order();
        DefaultTableModel model=(DefaultTableModel)displayTable.getModel();
        String[] row=new String[6];
        int total_sarees=0,total_parcels=0;
        for(int i=0;i<list3.size();i++){
                 row[0]=list3.get(i).getDate();
                 row[1]=list3.get(i).getQuality();
                 row[2]=list3.get(i).getSrNo();
                 row[3]=list3.get(i).getDesign();
                 row[4]=list3.get(i).getSarees();
                 row[5]=list3.get(i).getParcels();
                 formNo.setText(list3.get(i).getform());
                 agent_dropbox.setSelectedItem(list3.get(i).getAgent());
                 sareesParcels.setText(list3.get(i).getSareesParcels());
                 rate.setText(list3.get(i).getRate());
                 paymentDays.setText(list3.get(i).getPayment());
                 model.addRow(row);
                 total_sarees=total_sarees+Integer.parseInt(row[4]);
                 total_parcels=total_parcels+Integer.parseInt(row[5]);
        }
        totalSarees.setText(String.valueOf(total_sarees));
        totalParcels.setText(String.valueOf(total_parcels));
     }
    
    
    public void FillAgentCombo(){
        DefaultComboBoxModel model = new DefaultComboBoxModel(); 
        boolean added;
        int count=0;
        int compare=0;
        Object obj;
        model.setSelectedItem("---select agent---");
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");

            Connection con;
            con = DriverManager.getConnection(
                "jdbc:mysql://sql452.main-hosting.eu:3306/u159657273_astron","u159657273_user1","Vaishnavi$2801");
             
             String sql="select DISTINCT agent1,agent2,agent3 from party_details";
            PreparedStatement pst=con.prepareStatement(sql);
            ResultSet rs=pst.executeQuery();
            while(rs.next()){
                added=false;
                String name1=rs.getString("agent1");
                String name2=rs.getString("agent2");
                String name3=rs.getString("agent3");
                count=agent_dropbox.getItemCount();
                if(name1 == null ? String.valueOf(0) != null : !name1.equals(String.valueOf(0))){
                    model.addElement(name1);
                }
                if(name2 == null ? String.valueOf(0) != null : !name2.equals(String.valueOf(0))){
                    model.addElement(name2);
                }
                if(name3 == null ? String.valueOf(0) != null : !name3.equals(String.valueOf(0))){
                    model.addElement(name3);
                }
            }
            agent_dropbox.setModel(model);
        }

    //con.close();
    //pst.close();
        catch (ClassNotFoundException | SQLException e) {
                System.out.println(e.getMessage());
        }
    }
    
public void FillPartyCombo(){
    DefaultComboBoxModel model = new DefaultComboBoxModel(); 
    int count=0;
    int compare=0;
    boolean added;
    Object obj;
    model.setSelectedItem("---select party---");
    try{
        Class.forName("com.mysql.cj.jdbc.Driver");
        Connection con;
         con = DriverManager.getConnection(
            "jdbc:mysql://sql452.main-hosting.eu:3306/u159657273_astron","u159657273_user1","Vaishnavi$2801");
         //Class.forName("com.mysql.cj.jdbc.Driver");  
         //Connection con=DriverManager.getConnection("jdbc:mysql://localhost:3306/?user=root","root","Iloveher"); 
         String sql="select PartyName from party_table";
        PreparedStatement pst=con.prepareStatement(sql);
        ResultSet rs=pst.executeQuery();
        while(rs.next()){
                added=false;
                String name=rs.getString("PartyName");
                count=name_combo2.getItemCount();
                for (int i = 0; i < count; i++) {
                   obj = name_combo2.getItemAt(i);
                   compare = name.compareToIgnoreCase(obj.toString());
                   if (compare <= 0) { 
                       name_combo2.insertItemAt(name, i);
                       added = true;
                       break;
                  }
              }
              if (!added) {
                  name_combo2.addItem(name);
              }
              name_combo2.setModel(model);
        }
        

    //con.close();
    //pst.close();
    }
    catch (ClassNotFoundException | SQLException e) {
            System.out.println(e.getMessage());
        }
    }
       public ArrayList<order> date_specific_order(){
            ArrayList<order> orderList2=new ArrayList<order>();
            DefaultTableModel model=(DefaultTableModel)displayTable.getModel();
            while(model.getRowCount()>0){
                for (int i=0;i<model.getRowCount(); i++){
                        model.removeRow(i);
                }
            }
            try{
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con=DriverManager.getConnection(
                       "jdbc:mysql://sql452.main-hosting.eu:3306/u159657273_astron","u159657273_user1","Vaishnavi$2801");
               String SelectedBase=name_combo2.getSelectedItem().toString();
               order od;
               SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH);
               java.util.Date d3=date.getDate();
               String newDate3=formatter.format(d3);
               String query="select * from order_details where PartyName=? and Date=?";
               PreparedStatement pst=con.prepareStatement(query);
               pst.setString(1,SelectedBase);
               pst.setString(2,newDate3);
               ResultSet rs=pst.executeQuery();
               while(rs.next()){
                    od=new order(rs.getString("Date"),rs.getString("SrNumber"),rs.getString("Design"),rs.getString("Quality"),rs.getString("sarees"),rs.getString("parcels"));
                    orderList2.add(od);
               }
            }
            catch (ClassNotFoundException | SQLException e) {
                System.out.println(e.getMessage());
            }
            return orderList2;
     }
    public void show_date_user(){
        ArrayList<order> list2=date_specific_order();
        DefaultTableModel model=(DefaultTableModel)displayTable.getModel();
        String[] row=new String[6];
        int total_sarees=0,total_parcels=0;
        for(int i=0;i<list2.size();i++){
                    row[0]=list2.get(i).getDate();
                    row[1]=list2.get(i).getQuality();
                    row[2]=list2.get(i).getSrNo();
                    row[3]=list2.get(i).getDesign();
                    row[4]=list2.get(i).getSarees();
                    row[5]=list2.get(i).getParcels();
                    model.addRow(row);
                    total_sarees=total_sarees+Integer.parseInt(row[4]);
                    total_parcels=total_parcels+Integer.parseInt(row[5]);
        }
        totalSarees.setText(String.valueOf(total_sarees));
        totalParcels.setText(String.valueOf(total_parcels));
    }
    public ArrayList<order> order(){
        ArrayList<order> orderList=new ArrayList<>();
        DefaultTableModel model=(DefaultTableModel)displayTable.getModel();
        while(model.getRowCount()>0){
            for (int i=0;i<model.getRowCount(); i++){
                    model.removeRow(i);
            }
        }
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con=DriverManager.getConnection(
                   "jdbc:mysql://sql452.main-hosting.eu:3306/u159657273_astron","u159657273_user1","Vaishnavi$2801");
           String SelectedBase=name_combo2.getSelectedItem().toString();
           order od;
           String query="select * from order_details where PartyName=?";
           PreparedStatement pst=con.prepareStatement(query);
           pst.setString(1,SelectedBase);
           ResultSet rs=pst.executeQuery();
           while(rs.next()){
               od=new order(rs.getString("Date"),rs.getString("SrNumber"),rs.getString("Design"),rs.getString("Quality"),rs.getString("sarees"),rs.getString("parcels"));
               orderList.add(od);
            }
           }catch (ClassNotFoundException | SQLException e) {
               System.out.println(e.getMessage());
           }
           return orderList;
    }
    public void show_user(){
        ArrayList<order> list=order();
        DefaultTableModel model=(DefaultTableModel)displayTable.getModel();
        String[] row=new String[6];
        int total_sarees=0,total_parcels=0;
        for(int i=0;i<list.size();i++){
                    row[0]=list.get(i).getDate();
                    row[1]=list.get(i).getQuality();
                    row[2]=list.get(i).getSrNo();
                    row[3]=list.get(i).getDesign();
                    row[4]=list.get(i).getSarees();
                    row[5]=list.get(i).getParcels();
                    model.addRow(row);
                    total_sarees=total_sarees+Integer.parseInt(row[4]);
                    total_parcels=total_parcels+Integer.parseInt(row[5]);
        }
        totalSarees.setText(String.valueOf(total_sarees));
        totalParcels.setText(String.valueOf(total_parcels));
    }
    
    
    public static void main(String args[]) {
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                OrderForm of =new OrderForm();
                of.setVisible(true);
                of.setLocationRelativeTo(null);
            }
        });
    }

     // Variables declaration - do not modify//GEN-BEGIN:variables
     private javax.swing.JComboBox<String> agent_dropbox;
     private javax.swing.JComboBox<String> base;
     private com.toedter.calendar.JDateChooser date;
     private javax.swing.JButton delete;
     private javax.swing.JTable displayTable;
     private javax.swing.JTextField formNo;
     private javax.swing.JComboBox<String> i_want_to;
     private javax.swing.JButton insertBtn;
     private javax.swing.JButton jButton1;
     private javax.swing.JButton jButton5;
     private javax.swing.JLabel jLabel1;
     private javax.swing.JLabel jLabel10;
     private javax.swing.JLabel jLabel11;
     private javax.swing.JLabel jLabel2;
     private javax.swing.JLabel jLabel3;
     private javax.swing.JLabel jLabel4;
     private javax.swing.JLabel jLabel5;
     private javax.swing.JLabel jLabel6;
     private javax.swing.JLabel jLabel7;
     private javax.swing.JLabel jLabel8;
     private javax.swing.JLabel jLabel9;
     private javax.swing.JScrollPane jScrollPane1;
     private javax.swing.JComboBox<String> name_combo2;
     private javax.swing.JTextField paymentDays;
     private javax.swing.JTextField rate;
     private javax.swing.JButton reset;
     private javax.swing.JTextField sareesParcels;
     private javax.swing.JTextField totalParcels;
     private javax.swing.JTextField totalSarees;
     private javax.swing.JButton update;
     // End of variables declaration//GEN-END:variables
}
